# # Default values for kubernetes-helm.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.

# # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
# replicaCount: 1

# # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
# image:
#   repository: nginx
#   # This sets the pull policy for images.
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: ""

# # This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# imagePullSecrets: []
# # This is to override the chart name.
# nameOverride: ""
# fullnameOverride: ""

# # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Automatically mount a ServiceAccount's API credentials?
#   automount: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# # This is for setting Kubernetes Annotations to a Pod.
# # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
# podAnnotations: {}
# # This is for setting Kubernetes Labels to a Pod.
# # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
# podLabels: {}

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
# service:
#   # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
#   type: ClusterIP
#   # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
#   port: 80

# # This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

# # This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# # Additional volumes on the output Deployment definition.
# volumes: []
# # - name: foo
# #   secret:
# #     secretName: mysecret
# #     optional: false

# # Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
# # - name: foo
# #   mountPath: "/etc/foo"
# #   readOnly: true

# nodeSelector: {}

# tolerations: []

# affinity: {}

# Local Path Provisioner configuration
localPathProvisioner:
  enabled: true # Set to true to enable and install local-path-provisioner
  namespace: local-path-storage # Namespace for local-path-provisioner

# MetalLB configuration
metallb:
  enabled: true # Set to true to enable and install MetalLB
  namespace: metallb-system # Namespace for MetalLB; you would need to change the namespace in the CRD definition too
  l2advert:
    name: advert # Name for the MetalLB L2 advertisement
  ipAddressPool:
    enabled: true # Set to true to enable the IP address pool
    name: metallb-pool # Name for the MetalLB IP address pool
    addresses:
      - 10.10.10.100-10.10.10.120 # Range of IP addresses for MetalLB to use
      - 10.10.10.121/32 # Single IP address for MetalLB to use, use subnetting with mask bits as required to increase pool size
      - 10.10.10.122-10.10.10.150

# Nginx Ingress Controller configuration
ingress_nginx:
  enabled: true # Set to true to enable and install Nginx Ingress Controller
  namespace: ingress-nginx # Namespace for Nginx Ingress Controller

# CloudNativePG configuration
cloudnativepg:
  enabled: true # Set to true to enable and install CloudNativePG
  namespace: cnpg-pods # Namespace for CloudNativePG
  superuser:
    secretName: pg-superuser-secret # Name of the secret for the superuser
    name: postgres # Name for the superuser
    password: postgresuserpassword # Password for the superuser
  appuser:
    secretName: pg-app-secret # Name of the secret for the application user
    name: appuser # Name for the application user
    password: appuserpassword # Password for the application user
    appdb: appdb # Default database for the application user
  instances: 3 # Number of PostgreSQL instances in the cluster
  image:
    repository: ghcr.io/cloudnative-pg/postgresql # Image for the PostgreSQL instances
    tag: 15.4 # Tag for latest CloudNativePG image
  clusterName: postgres-cluster # Name of the PostgreSQL cluster
  storage:
    size: 10Gi # Size of the storage for each PostgreSQL instance, replace with as much storage as you need
    storageClass: local-path # Storage class to use for the PostgreSQL instances, replace with whatever StorageClass is appropriate for your installation

# MinIO configuration
minio:
  enabled: true # Set to true to enable and install MinIO
  app: minio # Name of the MinIO application
  namespace: minio # Namespace for MinIO
  accessKey: admin # Access key for MinIO
  secretKey: password # Secret key for MinIO
  replicas: 4 # Number of MinIO replicas
  image:
    repository: quay.io/minio/minio # Image repository for MinIO
    tag: latest # Image tag for MinIO
  storage:
    size: 10Gi # Size of the storage for MinIO, replace with as much storage as you need
    storageClass: local-path # Storage class to use for MinIO, replace with whatever StorageClass is appropriate for your installation
  ingress:
    className: nginx # Ingress class name for MinIO
    enabled: true # Set to true to enable MinIO ingress
    apiHost: api.minio.home.com # Host for the MinIO API
    consoleHost: console.minio.home.com # Host for the MinIO Console

# Sample App configuration
sampleApp:
  enabled: true # Set to true to enable and install the sample app
  namespace: sample-app-namespace # Namespace for the sample app
  app: sample-app # Name of the sample app
  replicas: 3 # Number of replicas for the sample app
  image:
    repository: nginx # Image repository for the sample app
    tag: latest # Image tag for the sample app
  ingress:
    enabled: true # Set to true to enable sample app ingress
    className: nginx # Ingress class name for the sample app
    host: sample-app.home.com # Host for the sample app ingress